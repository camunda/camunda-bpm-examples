<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.camunda.bpm.quickstart</groupId>
  <artifactId>camunda-quickstart-spring-servlet-pa-tomcat</artifactId>
  <packaging>war</packaging>
  <name>Camunda Platform - Quickstarts - Spring Servlet Process Application For Tomcat</name>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <camunda.version>7.22.0</camunda.version>
    <version.spring>6.1.8</version.spring>
    <version.tomcat>10.1.30</version.tomcat>
    <version.servlet-api>4.0.1</version.servlet-api>
    <version.h2>2.1.214</version.h2>
    <version.slf4j>1.7.32</version.slf4j>
    <version.maven-war-plugin>3.3.2</version.maven-war-plugin>
    <version.maven-dependency-plugin>2.8</version.maven-dependency-plugin>
    <version.cargo-maven-plugin.version>1.10.9</version.cargo-maven-plugin.version>
    <version.maven-compiler-plugin.version>3.11.0</version.maven-compiler-plugin.version>
    <maven.compiler.release>11</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-spring</artifactId>
      <version>${camunda.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <version>${camunda.version}</version>
      <!-- must be in scope provided, because it is on the shared classpath
        of the Camunda Tomcat distribution -->
      <scope>provided</scope>
      <exclusions>
        <!-- Excluded to avoid a version conflict with the version.spring we are
          including in our application -->
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${version.spring}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${version.spring}</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${version.servlet-api}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${version.h2}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${version.slf4j}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.tomcat</groupId>
      <artifactId>camunda-bpm-tomcat</artifactId>
      <version>${camunda.version}</version>
      <type>zip</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>camunda-bpm-nexus</id>
      <name>camunda-bpm-nexus</name>
      <url>https://artifacts.camunda.com/artifactory/public/</url>
    </repository>
  </repositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.maven-compiler-plugin.version}</version>
      </plugin>
      <!-- prepare deployment folder that will be used by web container. (see server.xml:150)  -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${version.maven-war-plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>war</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/to_deploy/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Unpack Camunda Tomcat distribution so that it is ready -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${version.maven-dependency-plugin}</version>
        <executions>
          <execution>
            <id>unpack-tomcat-distro</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.camunda.bpm.tomcat</includeGroupIds>
              <includeArtifactIds>camunda-bpm-tomcat</includeArtifactIds>
              <outputDirectory>
                 ${project.build.directory}/tomcat
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Start Tomcat distribution and deploy WAR application -->
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven3-plugin</artifactId>
        <version>${version.cargo-maven-plugin.version}</version>
        <configuration>
          <container>
            <containerId>tomcat10x</containerId>
            <home>${project.build.directory}/tomcat/server/apache-tomcat-${version.tomcat}</home>
          </container>
          <deployables>
            <deployable>
              <groupId>org.camunda.bpm.quickstart</groupId>
              <artifactId>camunda-quickstart-spring-servlet-pa-tomcat</artifactId>
              <type>war</type>
            </deployable>
          </deployables>
        </configuration>
        <executions>
          <execution>
            <id>start-tomcat</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-tomcat</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

</project>